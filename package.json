{
  "publisher": "TabNine",
  "name": "tabnine-vscode",
  "version": "3.5.28",
  "displayName": "Tabnine AI Autocomplete for Javascript, Python, Typescript, PHP, Go, Java, Ruby & more",
  "description": "üë©‚Äçüíªü§ñ JavaScript, Python, Java, Typescript & all other languages - AI Code completion plugin. Tabnine makes developers more productive by auto-completing their code.",
  "icon": "small_logo.png",
  "author": "Tabnine <support@tabnine.com> (https://tabnine.com/)",
  "license": "License at https://tabnine.com/eula",
  "galleryBanner": {
    "color": "#100f11",
    "theme": "dark"
  },
  "badges": [
    {
      "url": "https://img.shields.io/github/stars/codota/Tabnine?style=social",
      "description": "Star Tabnine on Github",
      "href": "https://bit.ly/36iGtUU"
    },
    {
      "url": "https://img.shields.io/twitter/follow/Tabnine_?style=social",
      "description": "Follow Tabnine on Twitter",
      "href": "https://bit.ly/2WHsEtD"
    },
    {
      "url": "https://img.shields.io/visual-studio-marketplace/r/TabNine.tabnine-vscode?logo=visual-studio-code&style=social",
      "description": "Rate us in VSCode Marketplace",
      "href": "https://bit.ly/3pqj7o2"
    },
    {
      "url": "https://img.shields.io/youtube/views/TKLkXh_c-Gw?style=social",
      "description": "Watch Tabnine demo video",
      "href": "https://bit.ly/36slY7c"
    }
  ],
  "homepage": "https://tabnine.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/codota/tabnine-vscode"
  },
  "bugs": {
    "url": "https://github.com/codota/tabnine-vscode/issues",
    "email": "support@tabnine.com"
  },
  "engines": {
    "vscode": "^1.50.0",
    "node": ">=12.0.10"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other"
  ],
  "keywords": [
    "javascript",
    "python",
    "typescript",
    "php",
    "autocomplete",
    "ruby",
    "java",
    "go",
    "golang",
    "bash",
    "kotlin",
    "html",
    "css",
    "ocaml",
    "perl",
    "rust",
    "julia",
    "lua",
    "haskell",
    "c",
    "cpp",
    "c++",
    "csharp",
    "c#",
    "react",
    "swift",
    "objective-c",
    "objectivec",
    "ai",
    "method completion",
    "intellicode",
    "intellisense",
    "snippets",
    "kite",
    "nodejs",
    "node",
    "node.js",
    "jupyter"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension",
  "scripts": {
    "analyze:bundle": "webpack --env analyzeBundle",
    "vscode:prepublish": "yarn --frozen-lockfile && yarn clear-out && webpack --mode production",
    "compile": "webpack --mode development --watch",
    "build": "webpack --mode development",
    "test:copyassets": "ncp ./src/test/fixture ./out/test/fixture/",
    "prettier": "prettier --write src/",
    "prettier:check": "prettier --check src/",
    "lint": "eslint . --max-warnings 0",
    "lint:fix": "eslint . --fix",
    "test": "yarn clear-out && tsc && yarn test:copyassets && node ./out/test/runTest.js",
    "vsce:package": "vsce package",
    "vsce:publish": "vsce publish",
    "ovsx:publish": "ovsx publish",
    "teamcity:test": "tsc && node ./out/test/runTest.js",
    "clear-out": "rimraf ./out"
  },
  "peerDependencies": {
    "vscode": "^1.1.37"
  },
  "devDependencies": {
    "@types/chai": "^4.2.14",
    "@types/debounce": "^1.2.1",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/mock-fs": "^4.13.0",
    "@types/ncp": "^2.0.4",
    "@types/node": "^12.0.10",
    "@types/rimraf": "^3.0.0",
    "@types/semver": "^7.3.4",
    "@types/sinon": "^9.0.11",
    "@types/tmp": "^0.2.0",
    "@types/vscode": "^1.50.0",
    "@types/yauzl": "^2.9.1",
    "@typescript-eslint/eslint-plugin": "^4.21.0",
    "@typescript-eslint/parser": "^4.18.0",
    "assert": "^2.0.0",
    "chai": "^4.2.0",
    "chai-shallow-deep-equal": "^1.4.6",
    "deep-object-diff": "^1.1.0",
    "eslint": "^7.32.0",
    "eslint-config-airbnb-typescript": "^12.3.1",
    "eslint-config-prettier": "^8.2.0",
    "eslint-import-resolver-typescript": "^2.4.0",
    "eslint-plugin-import": "^2.22.1",
    "glob": "^7.1.6",
    "husky": "^5.1.2",
    "jest": "^27.4.7",
    "lint-staged": "^10.5.4",
    "mocha": "^8.3.2",
    "mocha-teamcity-reporter": "^3.0.0",
    "mock-fs": "^4.13.0",
    "ncp": "^2.0.0",
    "ovsx": "0.2",
    "prettier": "2.2.1",
    "rimraf": "^3.0.2",
    "sinon": "^10.0.0",
    "terser-webpack-plugin": "^5.1.1",
    "ts-jest": "^27.1.3",
    "ts-loader": "^9.0.0",
    "ts-mockito": "^2.6.1",
    "typescript": "^4.2.2",
    "vsce": "^1.93.0",
    "vscode-test": "^1.5.2",
    "webpack": "^5.33.2",
    "webpack-bundle-analyzer": "^4.4.0",
    "webpack-cli": "^4.6.0"
  },
  "dependencies": {
    "await-semaphore": "^0.1.3",
    "debounce": "^1.2.1",
    "extract-zip": "^2.0.1",
    "https-proxy-agent": "^5.0.0",
    "semver": "^7.3.2",
    "systeminformation": "^5.6.10",
    "tmp": "^0.2.1",
    "vscode-extension-telemetry": "^0.1.7"
  },
  "capabilities": {
    "virtualWorkspaces": true,
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "tabnine-access",
          "title": "Tabnine AI Assistant",
          "icon": "small_logo.png"
        }
      ]
    },
    "views": {
      "tabnine-access": [
        {
          "type": "webview",
          "id": "tabnine-today",
          "name": "Tabnine Today",
          "when": "tabnine.tabnine-today-ready"
        },
        {
          "id": "tabnine-home",
          "name": "Quick Access",
          "when": "tabnine.tabnine-navigation-ready"
        },
        {
          "type": "webview",
          "id": "tabnine-notifications",
          "name": "Notifications",
          "when": "tabnine.notifications-ready"
        }
      ]
    },
    "languages": [
      {
        "id": "python",
        "aliases": [
          "Python",
          "py",
          "python"
        ]
      },
      {
        "id": "javascript",
        "aliases": [
          "JavaScript",
          "Javascript",
          "js",
          "javascript"
        ]
      },
      {
        "id": "java",
        "aliases": [
          "java",
          "Java"
        ]
      },
      {
        "id": "cpp",
        "aliases": [
          "cpp",
          "c++",
          "C++"
        ]
      },
      {
        "id": "c",
        "aliases": [
          "c",
          "C"
        ]
      },
      {
        "id": "php",
        "aliases": [
          "php",
          "PHP",
          "Php"
        ]
      },
      {
        "id": "go",
        "aliases": [
          "go",
          "Go",
          "golang",
          "Golang"
        ]
      },
      {
        "id": "csharp",
        "aliases": [
          "csharp",
          "Csharp",
          "CSharp",
          "cs",
          "c#",
          "C#"
        ]
      },
      {
        "id": "ruby",
        "aliases": [
          "ruby",
          "rb",
          "Ruby"
        ]
      },
      {
        "id": "objective-c",
        "aliases": [
          "objective-c",
          "m",
          "objectivec",
          "Objective-C"
        ]
      },
      {
        "id": "rust",
        "aliases": [
          "Rust",
          "rs",
          "rust"
        ]
      },
      {
        "id": "swift",
        "aliases": [
          "Swift",
          "swift"
        ]
      },
      {
        "id": "typescript",
        "aliases": [
          "typescript",
          "Typescript",
          "TypeScript",
          "ts"
        ]
      },
      {
        "id": "haskell",
        "aliases": [
          "Haskell",
          "hs",
          "haskell"
        ]
      },
      {
        "id": "julia",
        "aliases": [
          "Julia",
          "jl",
          "julia"
        ]
      },
      {
        "id": "ocaml",
        "aliases": [
          "ocaml",
          "ml",
          "OCaml"
        ]
      },
      {
        "id": "scala",
        "aliases": [
          "scala",
          "Scala"
        ]
      },
      {
        "id": "kotlin",
        "aliases": [
          "kotlin",
          "kt",
          "Kotlin"
        ]
      },
      {
        "id": "perl",
        "aliases": [
          "perl",
          "pl",
          "Perl"
        ]
      },
      {
        "id": "sql",
        "aliases": [
          "sql",
          "SQL"
        ]
      },
      {
        "id": "html",
        "aliases": [
          "Html",
          "HTML",
          "html"
        ]
      },
      {
        "id": "css",
        "aliases": [
          "CSS",
          "css"
        ]
      },
      {
        "id": "less",
        "aliases": [
          "less",
          "Less"
        ]
      },
      {
        "id": "scss",
        "aliases": [
          "scss"
        ]
      },
      {
        "id": "shellscript",
        "aliases": [
          "bash",
          "Bash",
          "sh",
          "shell",
          "shellscript",
          "Shellscript"
        ]
      },
      {
        "id": "lua",
        "aliases": [
          "Lua"
        ]
      },
      {
        "id": "javascriptreact",
        "aliases": [
          "react",
          "React",
          "reactjs"
        ]
      },
      {
        "id": "typescriptreact"
      }
    ],
    "commands": [
      {
        "command": "TabNine::config",
        "title": "Tabnine: Open Settings"
      },
      {
        "command": "TabNine::assistantClearCache",
        "title": "Tabnine: Clear Assistant Cache"
      },
      {
        "command": "TabNine::assistantSetThreshold",
        "title": "Tabnine: Set Assistant Threshold"
      },
      {
        "command": "TabNine::assistantToggle",
        "title": "Tabnine: Toggle Assistant"
      },
      {
        "command": "Tabnine.saveSnippet",
        "title": "‚å¨ Tabnine: Save Snippet"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "Tabnine.saveSnippet",
          "when": "tabnine.save-snippets:enabled && editorHasSelection"
        }
      ],
      "commandPalette": [
        {
          "command": "TabNine::assistantClearCache",
          "when": "tabnine-assistant:enabled && tabnine-assistant:background"
        },
        {
          "command": "TabNine::assistantSetThreshold",
          "when": "tabnine-assistant:enabled && tabnine-assistant:background"
        },
        {
          "command": "TabNine::assistantToggle",
          "when": "tabnine-assistant:capability"
        }
      ]
    },
    "configuration": [
      {
        "title": "Tabnine",
        "properties": {
          "tabnine.disable_line_regex": {
            "type": "array",
            "default": [],
            "description": "Disable Tabnine when the current line contains a match of any of the provided regexes. For example, add \"require\" to disable Tabnine when the current line contains the word 'require'."
          },
          "tabnine.disable_file_regex": {
            "type": "array",
            "default": [],
            "description": "Disable Tabnine when the file path contains a match of any of the provided regexes. For example, add \"[.]js$\" to disable Tabnine in JavaScript files."
          },
          "tabnine.experimentalAutoImports": {
            "type": [
              "boolean",
              null,
              "number"
            ],
            "default": null,
            "description": "Experimental: Enable modules auto-import following applying Tabnine suggestions"
          },
          "tabnine.logFilePath": {
            "type": "string",
            "description": "Tabnine's log file (Visual Studio Code must be restarted for this setting to take effect)"
          },
          "tabnine.receiveBetaChannelUpdates": {
            "type": "boolean",
            "default": false,
            "description": "Receive Tabnine VSCode extention beta updates"
          },
          "tabnine.inlineHintColor": {
            "type": "string",
            "description": "A css-compatible string that represents the inline hint color.\nFor example: black, #0a0a0a",
            "default": null
          }
        }
      }
    ],
    "keybindings": [
      {
        "key": "tab",
        "command": "tabnine.accept-inline-suggestion",
        "when": "tabnine.snippet-suggestion:enabled && tabnine.in-inline-suggestions || tabnine.inline-suggestion:enabled && tabnine.in-inline-suggestions"
      },
      {
        "key": "escape",
        "command": "tabnine.escape-inline-suggestion",
        "when": "tabnine.snippet-suggestion:enabled && tabnine.in-inline-suggestions || tabnine.inline-suggestion:enabled && tabnine.in-inline-suggestions"
      },
      {
        "key": "ctrl+z",
        "mac": "cmd+z",
        "command": "tabnine.escape-inline-suggestion",
        "when": "tabnine.snippet-suggestion:enabled && tabnine.in-inline-suggestions || tabnine.inline-suggestion:enabled && tabnine.in-inline-suggestions"
      },
      {
        "key": "alt+]",
        "command": "tabnine.next-inline-suggestion",
        "when": "tabnine.snippet-suggestion:enabled && tabnine.in-inline-suggestions || tabnine.inline-suggestion:enabled && tabnine.in-inline-suggestions"
      },
      {
        "key": "alt+[",
        "command": "tabnine.prev-inline-suggestion",
        "when": "tabnine.snippet-suggestion:enabled && tabnine.in-inline-suggestions || tabnine.inline-suggestion:enabled && tabnine.in-inline-suggestions"
      },
      {
        "key": "alt+.",
        "mac": "ctrl+.",
        "command": "tabnine.snippet-suggestion",
        "when": "tabnine.snippet-suggestion:enabled"
      }
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{ts,js,css,md}": "prettier --write src/"
  },
  "enabledApiProposals": [
    "inlineCompletions"
  ]
}