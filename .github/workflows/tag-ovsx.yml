name: Create OVSX Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*.*.*' # Push events to matching v*, i.e. v1.0.0, v20.15.10
    - '!v*.*.*-alpha.*'
  workflow_dispatch:
  
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Tag Version
      id: tag-version
      run: echo ::set-output name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
    - name: Package Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
#     - name: Tag & Package.json Versions Not Matching
#       if: ${{ format('v{0}', steps.package-version.outputs.current-version) != steps.tag-version.outputs.RELEASE_VERSION}}
#       run: exit 1
    - uses: actions/setup-node@v3
      with:
        node-version: '16.20.1'
    - name: Install
      run: yarn install --frozen-lockfile --ignore-optional
    - name: Replace INSTRUMENTATION_KEY
      uses: codota/replace-action@v2
      with:
        files: ./src/globals/consts.ts
        replacements: '<INSTRUMENTATION_KEY>=${{ secrets.INSTRUMENTATION_KEY }}'
      # emojis are counted as invalid chars - see https://github.com/eclipse/openvsx/issues/253
    - name: Strip Description
      run: |
        cat package.json | jq '.description = .description[5:]' | jq '.displayName = .displayName[:-32]' > package.json.stripped
        rm -rf package.json
        mv package.json.stripped package.json
    - name: Get Chat Version
      id: get_chat_version
      run: echo "version=$(cat ./.chatversion)" >> $GITHUB_ENV            
    - name: Checkout Chat Application Repository
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'codota/tabnine-chat-app'
        version: 'tags/${{ env.version }}'
        file: 'build.tar.gz'
        token: ${{ secrets.MODIFIER_PAT }}
    - name: Extract Chat App Build
      run: |
        mkdir -p ./chat
        tar -xzvf ./build.tar.gz -C ./chat
    - name: Package
      run: yarn vsce:package
    - name: Publish To Open VSX
      run: yarn ovsx:publish -- ./tabnine-vscode-${{ steps.package-version.outputs.current-version }}.vsix
      continue-on-error: true
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT}}
